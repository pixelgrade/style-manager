/*! For license information please see customizer.js.LICENSE.txt */
(function(){var __webpack_modules__={"./src/_js/customizer/colors/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "initializeColors": function() { return /* binding */ initializeColors; }\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ "react-dom");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _global_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../global-service */ "./src/_js/customizer/global-service.js");\n/* harmony import */ var _svg_colorize_elements_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../svg/colorize-elements.svg */ "./src/_js/customizer/svg/colorize-elements.svg");\nObject(function webpackMissingModule() { var e = new Error("Cannot find module \'./color-palette-builder\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }());\nObject(function webpackMissingModule() { var e = new Error("Cannot find module \'./color-palettes-preview\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }());\n\n\n\n\n\n\n\nvar initializeColors = function initializeColors() {\n  Object(function webpackMissingModule() { var e = new Error("Cannot find module \'./color-palette-builder\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }())(\'sm_advanced_palette_source\', \'sm_advanced_palette_output\');\n  wp.customize(\'sm_coloration_level\', function (setting) {\n    setting.bind(applyColorationValueToFields);\n  });\n  initializeColorizeElementsButton();\n  Object(function webpackMissingModule() { var e = new Error("Cannot find module \'./color-palettes-preview\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }())();\n};\n\nvar ColorizeElementsButton = function ColorizeElementsButton(props) {\n  var targetSectionID = "".concat(styleManager.config.options_name, "[colors_section]");\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var callback = function callback(isExpanded) {\n      if (!isExpanded) {\n        var backArray = (0,_global_service__WEBPACK_IMPORTED_MODULE_3__.getBackArray)();\n\n        var _targetSectionID = backArray.pop();\n\n        if (_targetSectionID) {\n          wp.customize.section(_targetSectionID, function (targetSection) {\n            targetSection.focus();\n          });\n        }\n      }\n    };\n\n    var targetSection = wp.customize.section(targetSectionID);\n\n    if (!targetSection) {\n      return;\n    }\n\n    targetSection.expanded.bind(callback);\n    return function () {\n      targetSection.expanded.unbind(callback);\n    };\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement("div", {\n    className: "sm-group",\n    style: {\n      marginTop: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement("div", {\n    className: "sm-panel-toggle",\n    id: "sm-colorize-elements-button",\n    style: {\n      borderTopWidth: 0\n    },\n    onClick: function onClick() {\n      wp.customize.section(targetSectionID, function (targetSection) {\n        (0,_global_service__WEBPACK_IMPORTED_MODULE_3__.pushToBackArray)(targetSection, \'sm_color_usage_section\');\n      });\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement("div", {\n    className: "sm-panel-toggle__icon",\n    dangerouslySetInnerHTML: {\n      __html: "\\n                <svg viewBox=\\"".concat(_svg_colorize_elements_svg__WEBPACK_IMPORTED_MODULE_4__["default"].viewBox, "\\">\\n                  <use xlink:href=\\"#").concat(_svg_colorize_elements_svg__WEBPACK_IMPORTED_MODULE_4__["default"].id, "\\" />\\n                </svg>")\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement("div", {\n    className: "sm-panel-toggle__label"\n  }, styleManager.l10n.colorPalettes.colorizeElementsPanelLabel)));\n};\n\nvar initializeColorizeElementsButton = function initializeColorizeElementsButton() {\n  var target = document.getElementById(\'customize-control-sm_coloration_level_control\');\n\n  if (!target) {\n    return;\n  }\n\n  var button = document.createElement(\'li\');\n  button.setAttribute(\'class\', \'customize-control\');\n  button.setAttribute(\'style\', \'padding: 0\');\n  target.insertAdjacentElement(\'afterend\', button);\n  react_dom__WEBPACK_IMPORTED_MODULE_0___default().render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ColorizeElementsButton, null), button);\n};\n\nvar applyColorationValueToFields = function applyColorationValueToFields(colorationLevel) {\n  var defaultColorationLevel = _global_service__WEBPACK_IMPORTED_MODULE_3__.getSettingConfig(\'sm_coloration_level\').default;\n  var isDefaultColoration = colorationLevel === defaultColorationLevel;\n  var settings = _global_service__WEBPACK_IMPORTED_MODULE_3__.getSettings();\n  var value = parseInt(colorationLevel, 10);\n  var threshold = value < 50 ? 4 : value < 75 ? 3 : value < 100 ? 2 : 1;\n  Object.keys(settings).forEach(function (settingID) {\n    var config = (0,_global_service__WEBPACK_IMPORTED_MODULE_3__.getSettingConfig)(settingID);\n\n    if ((config === null || config === void 0 ? void 0 : config.type) === \'sm_toggle\') {\n      var coloration = config.coloration;\n      wp.customize(settingID, function (setting) {\n        setting.set(isDefaultColoration ? config.default : coloration >= threshold);\n      });\n    }\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/colors/index.js?')},"./src/_js/customizer/create-reset-buttons.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createResetButtons\": function() { return /* binding */ createResetButtons; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/utils/api-set-setting-value.js\");\n\n\nvar createResetButtons = function createResetButtons() {\n  var $document = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document);\n  var showResetButtons = jquery__WEBPACK_IMPORTED_MODULE_0___default()('button[data-action=\"reset_style_manager\"]').length > 0;\n\n  if (showResetButtons) {\n    createResetPanelButtons();\n    createResetSectionButtons();\n    $document.on('click', '.js-reset-panel', onResetPanel);\n    $document.on('click', '.js-reset-section', onResetSection);\n    $document.on('click', '#customize-control-reset_style_manager button', onReset);\n  }\n};\n\nfunction createResetPanelButtons() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.panel-meta').each(function (i, obj) {\n    var $this = jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj);\n    var container = $this.parents('.control-panel');\n    var id = container.attr('id');\n\n    if (typeof id !== 'undefined') {\n      id = id.replace('sub-accordion-panel-', '');\n      id = id.replace('accordion-panel-', '');\n      var $buttonWrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<li class=\"customize-control customize-control-reset\"></li>');\n      var $button = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<button class=\"button js-reset-panel\" data-panel=\"' + id + '\"></button>');\n      $button.text(styleManager.l10n.panelResetButton).appendTo($buttonWrapper);\n      $this.parent().append($buttonWrapper);\n    }\n  });\n}\n\nfunction createResetSectionButtons() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.accordion-section-content').each(function (el, key) {\n    var $this = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n    var sectionID = $this.attr('id');\n\n    if (_.isUndefined(sectionID) || sectionID.indexOf(styleManager.config.options_name) === -1) {\n      return;\n    }\n\n    var id = sectionID.replace('sub-accordion-section-', '');\n    var $button = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<button class=\"button js-reset-section\" data-section=\"' + id + '\"></button>');\n    var $buttonWrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<li class=\"customize-control customize-control-reset\"></li>');\n    $button.text(styleManager.l10n.sectionResetButton);\n    $buttonWrapper.append($button);\n    $this.append($buttonWrapper);\n  });\n}\n\nfunction onReset(ev) {\n  ev.preventDefault();\n  var iAgree = confirm(styleManager.l10n.resetGlobalConfirmMessage);\n\n  if (!iAgree) {\n    return;\n  }\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().each(api.settings.controls, function (key, ctrl) {\n    var settingID = key.replace('_control', '');\n    var setting = styleManager.config.settings[settingID];\n\n    if (!_.isUndefined(setting) && !_.isUndefined(setting.default)) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_1__.apiSetSettingValue)(settingID, setting.default);\n    }\n  });\n  api.previewer.save();\n}\n\nfunction onResetPanel(e) {\n  e.preventDefault();\n  var panelID = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('panel'),\n      panel = api.panel(panelID),\n      sections = panel.sections(),\n      iAgree = confirm(styleManager.l10n.resetPanelConfirmMessage);\n\n  if (!iAgree) {\n    return;\n  }\n\n  if (sections.length > 0) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default().each(sections, function () {\n      var controls = this.controls();\n\n      if (controls.length > 0) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default().each(controls, function (key, ctrl) {\n          var settingID = ctrl.id.replace('_control', ''),\n              setting = styleManager.config.settings[settingID];\n\n          if (!_.isUndefined(setting) && !_.isUndefined(setting.default)) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.apiSetSettingValue)(settingID, setting.default);\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction onResetSection(e) {\n  e.preventDefault();\n  var sectionID = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('section'),\n      section = api.section(sectionID),\n      controls = section.controls();\n  var iAgree = confirm(styleManager.l10n.resetSectionConfirmMessage);\n\n  if (!iAgree) {\n    return;\n  }\n\n  if (controls.length > 0) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default().each(controls, function (key, ctrl) {\n      var setting_id = ctrl.id.replace('_control', ''),\n          setting = styleManager.config.settings[setting_id];\n\n      if (!_.isUndefined(setting) && !_.isUndefined(setting.default)) {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.apiSetSettingValue)(setting_id, setting.default);\n      }\n    });\n  }\n}\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/create-reset-buttons.js?")},"./src/_js/customizer/feedback-modal.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeFeedbackModal\": function() { return /* binding */ initializeFeedbackModal; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar initializeFeedbackModal = function initializeFeedbackModal() {\n  var $userFeedbackModal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#style-manager-user-feedback-modal');\n\n  if (!$userFeedbackModal.length) {\n    return;\n  }\n\n  var $userFeedbackForm = $userFeedbackModal.find('form'),\n      $userFeedbackCloseBtn = $userFeedbackModal.find('.close'),\n      $userFeedbackFirstStep = $userFeedbackModal.find('.first-step'),\n      $userFeedbackSecondStep = $userFeedbackModal.find('.second-step'),\n      $userFeedbackThanksStep = $userFeedbackModal.find('.thanks-step'),\n      $userFeedbackErrorStep = $userFeedbackModal.find('.error-step');\n  var userFeedbackModalShown = false,\n      colorPaletteChanged = false,\n      fontPaletteChanged = false; // Handle when to open the modal.\n\n  wp.customize.bind('saved', function () {\n    // We will only show the modal once per Customizer session.\n    if (!userFeedbackModalShown && (colorPaletteChanged || fontPaletteChanged)) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('feedback-modal-open modal-open');\n      userFeedbackModalShown = true;\n    }\n  }); // Handle the color palette changed info update.\n\n  wp.customize('sm_advanced_palette_output', function (setting) {\n    setting.bind(function (new_value, old_value) {\n      // Intentional loose comparison.\n      if (new_value != old_value) {\n        colorPaletteChanged = true;\n      }\n    });\n  }); // Handle the font palette changed info update.\n\n  wp.customize('sm_font_palette', function (setting) {\n    setting.bind(function (new_value, old_value) {\n      // Intentional loose comparison.\n      if (new_value != old_value) {\n        fontPaletteChanged = true;\n      }\n    });\n  }); // Handle the modal submit.\n\n  $userFeedbackForm.on('submit', function (event) {\n    event.preventDefault();\n    var $form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n    var data = {\n      action: 'style_manager_user_feedback',\n      nonce: styleManager.userFeedback.nonce,\n      type: $form.find('input[name=type]').val(),\n      rating: $form.find('input[name=rating]:checked').val(),\n      message: $form.find('textarea[name=message]').val()\n    };\n    jquery__WEBPACK_IMPORTED_MODULE_0___default().post(styleManager.config.ajax_url, data, function (response) {\n      if (true === response.success) {\n        $userFeedbackFirstStep.hide();\n        $userFeedbackSecondStep.hide();\n        $userFeedbackThanksStep.show();\n        $userFeedbackErrorStep.hide();\n      } else {\n        $userFeedbackFirstStep.hide();\n        $userFeedbackSecondStep.hide();\n        $userFeedbackThanksStep.hide();\n        $userFeedbackErrorStep.show();\n      }\n    });\n  });\n  $userFeedbackForm.find('input[name=rating]').on('change', function (event) {\n    // Leave everything in working order\n    setTimeout(function () {\n      $userFeedbackSecondStep.show();\n    }, 300);\n    var rating = $userFeedbackForm.find('input[name=rating]:checked').val();\n    $userFeedbackForm.find('.rating-placeholder').text(rating);\n  });\n  $userFeedbackCloseBtn.on('click', function (event) {\n    event.preventDefault();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('feedback-modal-open modal-open'); // Leave everything in working order\n\n    setTimeout(function () {\n      $userFeedbackFirstStep.show();\n      $userFeedbackSecondStep.hide();\n      $userFeedbackThanksStep.hide();\n      $userFeedbackErrorStep.hide();\n    }, 300);\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/feedback-modal.js?")},"./src/_js/customizer/fields/color-select/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleColorSelectFields\": function() { return /* binding */ handleColorSelectFields; },\n/* harmony export */   \"convertToColorSelect\": function() { return /* binding */ convertToColorSelect; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar handleColorSelectFields = function handleColorSelectFields() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js-color-select').each(function (i, obj) {\n    convertToColorSelect(obj);\n  });\n};\nvar convertToColorSelect = function convertToColorSelect(element) {\n  var $select = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n  var $selectOptions = $select.find('option');\n  var $colorSelect = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"style-manager-color-select\">');\n  var settingID = $select.data('customize-setting-link');\n  var $optionsList = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"style-manager-color-select__option-list\">');\n  $selectOptions.each(function (i, option) {\n    var $option = jquery__WEBPACK_IMPORTED_MODULE_0___default()(option);\n    var label = $option.text();\n    var value = $option.attr('value');\n    var $colorSelectOptionLabel = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"style-manager-color-select__option-label\">');\n    var $colorSelectOption = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"style-manager-color-select__option\">');\n    $colorSelectOptionLabel.text(label).appendTo($colorSelectOption);\n    $colorSelectOption.data('value', value).appendTo($optionsList);\n    $colorSelectOption.addClass('style-manager-color-select__option--' + value);\n  });\n  $optionsList.appendTo($colorSelect);\n  var $colorSelectOptions = $colorSelect.find('.style-manager-color-select__option');\n  $colorSelectOptions.each(function (i, option) {\n    var $colorSelectOption = jquery__WEBPACK_IMPORTED_MODULE_0___default()(option);\n    var value = $colorSelectOption.data('value');\n    $colorSelectOption.on('click', function () {\n      $select.val(value).change();\n    });\n  });\n  $colorSelect.insertBefore($select);\n  $select.hide();\n\n  function updateColorSelect(newValue) {\n    var $colorSelectOption = $colorSelectOptions.filter(function (index, obj) {\n      return jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj).data('value') === newValue;\n    });\n\n    if ($colorSelectOption.length) {\n      $colorSelectOptions.removeClass('style-manager-color-select__option--selected');\n      $colorSelectOption.addClass('style-manager-color-select__option--selected');\n    }\n  }\n\n  wp.customize(settingID, function (setting) {\n    updateColorSelect(setting());\n    setting.bind(updateColorSelect);\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fields/color-select/index.js?")},"./src/_js/customizer/fields/range/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleRangeFields\": function() { return /* binding */ handleRangeFields; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar handleRangeFields = function handleRangeFields() {\n  var rangeControlSelectors = [\".accordion-section-content[id*=\\\"\".concat(styleManager.config.options_name, \"\\\"]\"), \"#sub-accordion-section-sm_color_palettes_section\", \"#sub-accordion-section-sm_color_usage_section\", \"#sub-accordion-section-sm_spacing_section\"];\n  var rangeControlSelector = rangeControlSelectors.join(', ');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(rangeControlSelector).each(function (i, container) {\n    var $rangeFields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container).find('input[type=\"range\"]'); // For each range input add a number field (for preview mainly - but it can also be used for input)\n\n    $rangeFields.each(function (i, obj) {\n      var $range = jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj);\n      var settingID = $range.data('customize-setting-link');\n      var $number = $range.clone();\n      $number.attr('type', 'text').attr('class', 'range-value').removeAttr('data-value_entry');\n      $number.data('source', $range);\n\n      if ($range.first().attr('id')) {\n        $number.attr('id', $range.first().attr('id') + '_number');\n      }\n\n      $number.insertAfter($range);\n      wp.customize(settingID, function (setting) {\n        setting.bind(function (newValue) {\n          $number.val(newValue);\n        });\n      }); // font options don't have a setting associated with every input\n\n      if (!settingID) {\n        $range.on('input', function (event) {\n          $number.val(event.target.value);\n        });\n      } // When clicking outside the number field or on Enter.\n\n\n      $number.on('blur keyup', onRangePreviewBlur);\n    });\n  });\n};\n\nfunction onRangePreviewBlur(event) {\n  var $number = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n  var $range = $number.data('source');\n\n  if ('keyup' === event.type && event.keyCode !== 13) {\n    return;\n  }\n\n  if (event.target.value === $range.val()) {\n    // Nothing to do if the values are identical.\n    return;\n  }\n\n  if (!hasValidValue($number)) {\n    $number.val($range.val());\n    shake($number);\n  } else {\n    // Do not mark this trigger as being programmatically triggered by Style Manager since it is a result of a user input.\n    $range.val($number.val()).trigger('change');\n  }\n}\n\nfunction hasValidValue($input) {\n  var min = $input.attr('min');\n  var max = $input.attr('max');\n  var value = $input.val();\n\n  if (typeof min !== 'undefined' && parseFloat(min) > parseFloat(value)) {\n    return false;\n  }\n\n  if (typeof max !== 'undefined' && parseFloat(max) < parseFloat(value)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction shake($field) {\n  $field.addClass('input-shake input-error');\n  $field.one('animationend', function () {\n    $field.removeClass('input-shake input-error');\n  });\n}\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fields/range/index.js?")},"./src/_js/customizer/fields/tabs/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleTabs\": function() { return /* binding */ handleTabs; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar handleTabs = function handleTabs() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.sm-tabs').each(function (i, obj) {\n    var $wrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj);\n    var $section = $wrapper.closest('.control-section');\n    var $tabs = $wrapper.children('.sm-tabs__item');\n    var targets = $tabs.map(function (i, el) {\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).data('target');\n      return \"sm-view-\".concat(target);\n    });\n    var targetClassnames = targets.toArray().join(\" \");\n\n    function setActiveTab($active) {\n      var target = $active.data('target');\n      $tabs.removeClass('sm-tabs__item--active');\n      $active.addClass('sm-tabs__item--active');\n      $section.removeClass(targetClassnames).addClass(\"sm-view-\".concat(target));\n    }\n\n    $wrapper.on('click', '.sm-tabs__item', function (e) {\n      e.preventDefault();\n      setActiveTab(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this));\n    });\n    setActiveTab($tabs.first());\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fields/tabs/index.js?")},"./src/_js/customizer/folding-fields.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleFoldingFields\": function() { return /* binding */ handleFoldingFields; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * This function will search for all the interdependend fields and make a bound between them.\n * So whenever a target is changed, it will take actions to the dependent fields.\n * @TODO  this is still written in a barbaric way, refactor when needed\n */\n\nvar handleFoldingFields = function handleFoldingFields() {\n  if (_.isUndefined(styleManager.config) || _.isUndefined(styleManager.config.settings)) {\n    return; // bail\n  }\n\n  (jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.reactor.defaults.compliant) = function () {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).slideDown();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find(':disabled').attr({\n      disabled: false\n    });\n  };\n\n  (jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.reactor.defaults.uncompliant) = function () {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).slideUp();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find(':enabled').attr({\n      disabled: true\n    });\n  };\n\n  var IS = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, (jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.reactor.helpers));\n\n  var bindFoldingEvents = function bindFoldingEvents(parentID, field, relation) {\n    var key = null;\n\n    if (_.isString(field)) {\n      key = field;\n    } else if (!_.isUndefined(field.id)) {\n      key = field.id;\n    } else if (_.isString(field[0])) {\n      key = field[0];\n    } else {\n      return; // no key, no fun\n    }\n\n    var value = 1,\n        // by default we use 1 the most used value for checkboxes or inputs\n    between = [0, 1]; // can only be `show` or `hide`\n\n    var target_key = styleManager.config.options_name + '[' + key + ']';\n    var target_type = styleManager.config.settings[target_key].type; // we support the usual syntax like a config array like `array( 'id' => $id, 'value' => $value, 'compare' => $compare )`\n    // but we also support a non-associative array like `array( $id, $value, $compare )`\n\n    if (!_.isUndefined(field.value)) {\n      value = field.value;\n    } else if (!_.isUndefined(field[1]) && !_.isString(field[1])) {\n      value = field[1];\n    }\n\n    if (!_.isUndefined(field.between)) {\n      between = field.between;\n    }\n    /**\n     * Now for each target we have, we will bind a change event to hide or show the dependent fields\n     */\n\n\n    var target_selector = '[data-customize-setting-link=\"' + styleManager.config.options_name + '[' + key + ']\"]';\n\n    switch (target_type) {\n      case 'checkbox':\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, function () {\n          return jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).is(':checked') == value;\n        });\n        break;\n\n      case 'radio':\n      case 'sm_radio':\n      case 'sm_switch':\n      case 'radio_image':\n      case 'radio_html':\n        // in case of an array of values we use the ( val in array) condition\n        if (_.isObject(value)) {\n          value = _.toArray(value);\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, function () {\n            return value.indexOf(jquery__WEBPACK_IMPORTED_MODULE_0___default()(target_selector + ':checked').val()) !== -1;\n          });\n        } else {\n          // in any other case we use a simple == comparison\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, function () {\n            return jquery__WEBPACK_IMPORTED_MODULE_0___default()(target_selector + ':checked').val() == value;\n          });\n        }\n\n        break;\n\n      case 'range':\n        var x = IS.Between(between[0], between[1]);\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, x);\n        break;\n\n      default:\n        // in case of an array of values we use the ( val in array) condition\n        if (_.isObject(value)) {\n          value = _.toArray(value);\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, function () {\n            return value.indexOf(jquery__WEBPACK_IMPORTED_MODULE_0___default()(target_selector).val()) !== -1;\n          });\n        } else {\n          // in any other case we use a simple == comparison\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentID).reactIf(target_selector, function () {\n            return jquery__WEBPACK_IMPORTED_MODULE_0___default()(target_selector).val() == value;\n          });\n        }\n\n        break;\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(target_selector).trigger('change', ['style-manager']);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.reactor').trigger('change.reactor'); // triggers all events on load\n  };\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().each(styleManager.config.settings, function (id, field) {\n    /**\n     * Here we have the id of the fields. but we know for sure that we just need his parent selector\n     * So we just create it\n     */\n    var parentID = id.replace('[', '-');\n    parentID = parentID.replace(']', '');\n    parentID = '#customize-control-' + parentID + '_control'; // get only the fields that have a 'show_if' property\n\n    if (field.hasOwnProperty('show_if')) {\n      var relation = 'AND';\n\n      if (!_.isUndefined(field.show_if.relation)) {\n        relation = field.show_if.relation; // remove the relation property, we need the config to be array based only\n\n        delete field.show_if.relation;\n      }\n      /**\n       * The 'show_if' can be a simple array with one target like: [ id, value, comparison, action ]\n       * Or it could be an array of multiple targets and we need to process both cases\n       */\n\n\n      if (!_.isUndefined(field.show_if.id)) {\n        bindFoldingEvents(parentID, field.show_if, relation);\n      } else if (_.isObject(field.show_if)) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default().each(field.show_if, function (i, j) {\n          bindFoldingEvents(parentID, j, relation);\n        });\n      }\n    }\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/folding-fields.js?")},"./src/_js/customizer/font-palettes/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeFontPalettes\": function() { return /* binding */ initializeFontPalettes; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar initializeFontPalettes = function initializeFontPalettes() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js-font-palette').each(function (i, obj) {\n    var $paletteSet = jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj);\n    var $labels = $paletteSet.find('label');\n    $labels.on('click', function (event) {\n      var $label = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var forID = $label.attr('for');\n      var $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#\".concat(forID));\n      var fontsLogic = $input.data('fonts_logic');\n      showAdvancedFontPaletteControls();\n      applyFontPalette(fontsLogic);\n    });\n  }); // Handle the case when there is no selected font palette (like on a fresh installation without any demo data import).\n  // In this case we want to hide the advanced tab.\n\n  wp.customize('sm_font_palette', function (setting) {\n    if (!setting()) {\n      hideAdvancedFontPaletteControls();\n    }\n  });\n};\n\nvar applyFontPalette = function applyFontPalette(fontsLogic) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().each(fontsLogic, function (settingID, config) {\n    wp.customize(settingID, function (setting) {\n      setting.set(config);\n    });\n  });\n};\n\nvar advancedTabSelector = '#sub-accordion-section-sm_font_palettes_section .sm-tabs__item[data-target=\"advanced\"]';\n\nvar hideAdvancedFontPaletteControls = function hideAdvancedFontPaletteControls() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(advancedTabSelector).css('visibility', 'hidden');\n};\n\nvar showAdvancedFontPaletteControls = function showAdvancedFontPaletteControls() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(advancedTabSelector).css('visibility', 'visible');\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/font-palettes/index.js?")},"./src/_js/customizer/fonts/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeFonts\": function() { return /* binding */ initializeFonts; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils */ \"./src/_js/utils.js\");\n/* harmony import */ var _global_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../global-service */ \"./src/_js/customizer/global-service.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/handle-font-popup-toggle.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/init-subfield.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/get-font-details.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/update-font-head-title.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/update-variant-field.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/self-update-value.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/fonts-service.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/load-font-value.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils */ \"./src/_js/customizer/fonts/utils/callback-filter.js\");\n\n\n\n\n\nvar wrapperSelector = '.font-options__wrapper';\nvar fontVariantSelector = '.style-manager_font_weight';\nvar initializeFonts = function initializeFonts() {\n  var $fontFields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(wrapperSelector);\n  $fontFields.each(function (i, obj) {\n    var $fontField = jquery__WEBPACK_IMPORTED_MODULE_0___default()(obj);\n    initializeFontFamilyField($fontField);\n    initializeSubfields($fontField);\n  });\n  (0,_utils__WEBPACK_IMPORTED_MODULE_1__.handleFontPopupToggle)();\n  reloadConnectedFields();\n};\n\nvar initializeFontFamilyField = function initializeFontFamilyField($fontField) {\n  var $fontFamilyField = $fontField.find('.style-manager_font_family');\n  var familyPlaceholderText = styleManager.l10n.fonts.familyPlaceholderText; // Add the Google Fonts opts to each control\n\n  addGoogleFontsToFontFamilyField($fontFamilyField); // Initialize the select2 field for the font family\n\n  $fontFamilyField.select2({\n    placeholder: familyPlaceholderText\n  });\n  $fontFamilyField.on('change', onFontFamilyChange);\n  bindFontFamilySettingChange($fontFamilyField);\n};\n\nvar initializeSubfields = function initializeSubfields($fontField) {\n  var $variant = $fontField.find(fontVariantSelector);\n  var $select = $fontField.find('select').not('select[class*=\\' select2\\'],select[class^=\\'select2\\']');\n  var $range = $fontField.find('input[type=\"range\"]'); // Initialize the select2 field for the font variant\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_2__.initSubfield)($variant, true); // Initialize all the regular selects in the font subfields\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_2__.initSubfield)($select, false); // Initialize the all the range fields in the font subfields\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_2__.initSubfield)($range, false);\n};\n\nvar addGoogleFontsToFontFamilyField = function addGoogleFontsToFontFamilyField($fontFamilyField) {\n  var googleFontsOptions = wp.customize.settings['google_fonts_opts'];\n  var $googleOptionsPlaceholder = $fontFamilyField.find('.google-fonts-opts-placeholder').first();\n\n  if (typeof googleFontsOptions !== 'undefined' && $googleOptionsPlaceholder.length) {\n    // Replace the placeholder with the HTML for the Google fonts select options.\n    $googleOptionsPlaceholder.replaceWith(googleFontsOptions); // The active font family might be a Google font so we need to set the current value after we've added the options.\n\n    var activeFontFamily = $fontFamilyField.data('active_font_family');\n\n    if (typeof activeFontFamily !== 'undefined') {\n      $fontFamilyField.val(activeFontFamily);\n    }\n  }\n};\n\nvar onFontFamilyChange = function onFontFamilyChange(event) {\n  var newFontFamily = event.target.value;\n  var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n  var $wrapper = $target.closest(wrapperSelector); // Get the new font details\n\n  var newFontDetails = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getFontDetails)(newFontFamily); // Update the font field head title (with the new font family name).\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateFontHeadTitle)(newFontDetails, $wrapper); // Update the variant subfield with the new options given by the selected font family.\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_5__.updateVariantField)(newFontDetails, $wrapper);\n\n  if (typeof who !== 'undefined' && who === 'style-manager') {// The change was triggered programmatically by Style Manager.\n    // No need to self-update the value.\n  } else {\n    // Mark this input as touched by the user.\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).data('touched', true); // Serialize subfield values and refresh the fonts in the preview window.\n\n    (0,_utils__WEBPACK_IMPORTED_MODULE_6__.selfUpdateValue)($wrapper, (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getSettingID)($target));\n  }\n};\n\nvar bindFontFamilySettingChange = function bindFontFamilySettingChange($fontFamilyField) {\n  var $wrapper = $fontFamilyField.closest(wrapperSelector);\n  var settingID = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getSettingID)($fontFamilyField);\n  wp.customize(settingID, function (setting) {\n    setting.bind(function (newValue, oldValue) {\n      // this is a costly operation\n      if (!_utils__WEBPACK_IMPORTED_MODULE_8__.isUpdating(settingID)) {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_9__.loadFontValue)($wrapper, newValue, settingID);\n      }\n    });\n  });\n};\n\nvar reloadConnectedFields = (0,_utils__WEBPACK_IMPORTED_MODULE_10__.debounce)(function () {\n  var settingIDs = styleManager.fontPalettes.masterSettingIds;\n  _global_service__WEBPACK_IMPORTED_MODULE_11__.unbindConnectedFields(settingIDs);\n  settingIDs.forEach(function (settingID) {\n    wp.customize(settingID, function (parentSetting) {\n      (0,_global_service__WEBPACK_IMPORTED_MODULE_11__.setCallback)(settingID, function (newValue) {\n        var settingConfig = (0,_global_service__WEBPACK_IMPORTED_MODULE_11__.getSetting)(settingID);\n        var connectedFields = settingConfig.connected_fields || {};\n        Object.keys(connectedFields).forEach(function (key) {\n          var connectedFieldData = connectedFields[key];\n          var connectedSettingID = connectedFieldData.setting_id;\n          var callbackFilter = (0,_utils__WEBPACK_IMPORTED_MODULE_12__.getCallbackFilter)(connectedFieldData);\n          wp.customize(connectedSettingID, function (connectedSetting) {\n            connectedSetting.set(callbackFilter(newValue));\n          });\n        });\n      });\n      parentSetting.bind((0,_global_service__WEBPACK_IMPORTED_MODULE_11__.getCallback)(settingID));\n    });\n  });\n}, 30);\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/index.js?")},"./src/_js/customizer/fonts/utils/callback-filter.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCallbackFilter\": function() { return /* binding */ getCallbackFilter; }\n/* harmony export */ });\n/* harmony import */ var _standardize_numerical_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./standardize-numerical-value */ \"./src/_js/customizer/fonts/utils/standardize-numerical-value.js\");\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./round */ \"./src/_js/customizer/fonts/utils/round.js\");\n\n\nvar getCallbackFilter = function getCallbackFilter(connectedFieldData) {\n  return function (newValue, oldValue) {\n    /* ======================\n     * Process the font logic to get the value that should be applied to the connected (font) fields.\n     *\n     * The font logic is already in the new value - @see setFieldFontsLogicConfig()\n     */\n    var newFontData = {};\n    var fontsLogic = newValue;\n\n    if (typeof fontsLogic.reset !== 'undefined') {\n      var settingID = connectedFieldData.setting_id;\n      var defaultValue = styleManager.config.settings[settingID].default;\n\n      if (!_.isUndefined(setting) && !_.isEmpty(defaultValue)) {\n        newFontData['font_family'] = defaultValue['font_family'];\n        newFontData['font_size'] = defaultValue['font_size'];\n        newFontData['line_height'] = defaultValue['line_height'];\n        newFontData['letter_spacing'] = defaultValue['letter_spacing'];\n        newFontData['text_transform'] = defaultValue['text_transform'];\n        newFontData['font_variant'] = defaultValue['font_variant'];\n      }\n    }\n    /* ===========\n     * We need to determine the 6 subfields values to be able to determine the value of the font field.\n     */\n    // The font family is straight forward as it comes directly from the parent field font logic configuration.\n\n\n    if (typeof fontsLogic.font_family !== 'undefined') {\n      newFontData['font_family'] = fontsLogic.font_family;\n    }\n\n    if (_.isEmpty(newFontData['font_family'])) {\n      // If we don't have a font family, we really can't do much.\n      return;\n    }\n\n    if (typeof connectedFieldData.font_size !== 'undefined' && false !== connectedFieldData.font_size) {\n      newFontData['font_size'] = (0,_standardize_numerical_value__WEBPACK_IMPORTED_MODULE_0__.standardizeNumericalValue)(connectedFieldData.font_size); // Next, we what to apply the overall font size multiplier.\n\n      if (!isNaN(newFontData['font_size'].value)) {\n        // By default we use 1.\n        var overallFontSizeMultiplier = 1.0;\n\n        if (typeof fontsLogic.font_size_multiplier !== 'undefined') {\n          // Make sure it is a positive float.\n          overallFontSizeMultiplier = parseFloat(fontsLogic.font_size_multiplier); // We reject negative or 0 values.\n\n          if (overallFontSizeMultiplier <= 0) {\n            overallFontSizeMultiplier = 1.0;\n          }\n        }\n\n        newFontData['font_size'].value = (0,_round__WEBPACK_IMPORTED_MODULE_1__.round)(parseFloat(newFontData['font_size'].value) * overallFontSizeMultiplier, styleManager.fonts.floatPrecision);\n      } // The font variant, letter spacing and text transform all come together from the font styles (intervals).\n      // We just need to find the one that best matches the connected field given font size (if given).\n      // Please bear in mind that we expect the font logic styles to be preprocessed, without any overlapping and using numerical keys.\n\n\n      if (typeof fontsLogic.font_styles_intervals !== 'undefined' && _.isArray(fontsLogic.font_styles_intervals) && fontsLogic.font_styles_intervals.length > 0) {\n        var idx = 0;\n\n        while (idx < fontsLogic.font_styles_intervals.length - 1 && typeof fontsLogic.font_styles_intervals[idx].end !== 'undefined' && fontsLogic.font_styles_intervals[idx].end <= connectedFieldData.font_size.value) {\n          idx++;\n        } // We will apply what we've got.\n\n\n        if (!_.isEmpty(fontsLogic.font_styles_intervals[idx].font_variant)) {\n          newFontData['font_variant'] = fontsLogic.font_styles_intervals[idx].font_variant;\n        }\n\n        if (!_.isEmpty(fontsLogic.font_styles_intervals[idx].letter_spacing)) {\n          newFontData['letter_spacing'] = (0,_standardize_numerical_value__WEBPACK_IMPORTED_MODULE_0__.standardizeNumericalValue)(fontsLogic.font_styles_intervals[idx].letter_spacing);\n        }\n\n        if (!_.isEmpty(fontsLogic.font_styles_intervals[idx].text_transform)) {\n          newFontData['text_transform'] = fontsLogic.font_styles_intervals[idx].text_transform;\n        } // Next, we what to apply the interval font size multiplier.\n\n\n        if (!isNaN(newFontData['font_size'].value)) {\n          // By default we use 1.\n          var fontSizeMultiplier = 1.0;\n\n          if (typeof fontsLogic.font_styles_intervals[idx].font_size_multiplier !== 'undefined') {\n            // Make sure it is a positive float.\n            fontSizeMultiplier = parseFloat(fontsLogic.font_styles_intervals[idx].font_size_multiplier); // We reject negative or 0 values.\n\n            if (fontSizeMultiplier <= 0) {\n              fontSizeMultiplier = 1.0;\n            }\n          }\n\n          newFontData['font_size'].value = (0,_round__WEBPACK_IMPORTED_MODULE_1__.round)(parseFloat(newFontData['font_size'].value) * fontSizeMultiplier, styleManager.fonts.floatPrecision);\n        }\n      } // The line height is determined by getting the value of the polynomial function determined by points.\n\n\n      if (typeof fontsLogic.font_size_to_line_height_points !== 'undefined' && _.isArray(fontsLogic.font_size_to_line_height_points)) {\n        var result = regression.logarithmic(fontsLogic.font_size_to_line_height_points, {\n          precision: styleManager.fonts.floatPrecision\n        });\n        var lineHeight = result.predict(newFontData['font_size'].value)[1];\n        newFontData['line_height'] = (0,_standardize_numerical_value__WEBPACK_IMPORTED_MODULE_0__.standardizeNumericalValue)(lineHeight);\n      }\n    }\n\n    return newFontData;\n  };\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/callback-filter.js?")},"./src/_js/customizer/fonts/utils/convert-font-variant.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convertFontVariantToFVD\": function() { return /* binding */ convertFontVariantToFVD; }\n/* harmony export */ });\n/**\n * Will convert an array of CSS like variants into their FVD equivalents. Web Font Loader expects this format.\n * @link https://github.com/typekit/fvd\n */\nvar convertFontVariantToFVD = function convertFontVariantToFVD(variant) {\n  variant = String(variant);\n  var fontStyle = 'n'; // normal\n\n  if (-1 !== variant.indexOf('italic')) {\n    fontStyle = 'i';\n    variant = variant.replace('italic', '');\n  } else if (-1 !== variant.indexOf('oblique')) {\n    fontStyle = 'o';\n    variant = variant.replace('oblique', '');\n  }\n\n  var fontWeight; //  The equivalence:\n  //\n  //\t\t\t1: 100\n  //\t\t\t2: 200\n  //\t\t\t3: 300\n  //\t\t\t4: 400 (default, also recognized as 'normal')\n  //\t\t\t5: 500\n  //\t\t\t6: 600\n  //\t\t\t7: 700 (also recognized as 'bold')\n  //\t\t\t8: 800\n  //\t\t\t9: 900\n\n  switch (variant) {\n    case '100':\n      fontWeight = '1';\n      break;\n\n    case '200':\n      fontWeight = '2';\n      break;\n\n    case '300':\n      fontWeight = '3';\n      break;\n\n    case '500':\n      fontWeight = '5';\n      break;\n\n    case '600':\n      fontWeight = '6';\n      break;\n\n    case '700':\n    case 'bold':\n      fontWeight = '7';\n      break;\n\n    case '800':\n      fontWeight = '8';\n      break;\n\n    case '900':\n      fontWeight = '9';\n      break;\n\n    default:\n      fontWeight = '4';\n      break;\n  }\n\n  return fontStyle + fontWeight;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/convert-font-variant.js?")},"./src/_js/customizer/fonts/utils/determine-font-type.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"determineFontType\": function() { return /* binding */ determineFontType; }\n/* harmony export */ });\nvar determineFontType = function determineFontType(fontFamily) {\n  // The default is a standard font (aka no special loading or processing).\n  var fontType = 'system_font'; // We will follow a stack in the following order: third-party fonts, cloud fonts, theme fonts, Google fonts, standard fonts.\n\n  if (typeof styleManager.fonts.third_party_fonts[fontFamily] !== 'undefined') {\n    fontType = 'third_party_font';\n  } else if (typeof styleManager.fonts.cloud_fonts[fontFamily] !== 'undefined') {\n    fontType = 'cloud_font';\n  } else if (typeof styleManager.fonts.theme_fonts[fontFamily] !== 'undefined') {\n    fontType = 'theme_font';\n  } else if (typeof styleManager.fonts.google_fonts[fontFamily] !== 'undefined') {\n    fontType = 'google_font';\n  }\n\n  return fontType;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/determine-font-type.js?")},"./src/_js/customizer/fonts/utils/fonts-service.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "isLoading": function() { return /* binding */ isLoading; },\n/* harmony export */   "isUpdating": function() { return /* binding */ isUpdating; },\n/* harmony export */   "setLoading": function() { return /* binding */ setLoading; },\n/* harmony export */   "setUpdating": function() { return /* binding */ setUpdating; }\n/* harmony export */ });\nvar updating = {};\nvar loading = {};\nvar isLoading = function isLoading(settingID) {\n  return !!updating[settingID];\n};\nvar isUpdating = function isUpdating(settingID) {\n  return !!loading[settingID];\n};\nvar setLoading = function setLoading(settingID, value) {\n  loading[settingID] = value;\n};\nvar setUpdating = function setUpdating(settingID, value) {\n  updating[settingID] = value;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/fonts-service.js?')},"./src/_js/customizer/fonts/utils/get-font-details.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFontDetails\": function() { return /* binding */ getFontDetails; }\n/* harmony export */ });\n/* harmony import */ var _determine_font_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./determine-font-type */ \"./src/_js/customizer/fonts/utils/determine-font-type.js\");\n\nvar getFontDetails = function getFontDetails(fontFamily) {\n  var fontType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (false === fontType) {\n    // We will determine the font type based on font family.\n    fontType = (0,_determine_font_type__WEBPACK_IMPORTED_MODULE_0__.determineFontType)(fontFamily);\n  }\n\n  switch (fontType) {\n    case 'theme_font':\n      return styleManager.fonts.theme_fonts[fontFamily];\n      break;\n\n    case 'cloud_font':\n      return styleManager.fonts.cloud_fonts[fontFamily];\n      break;\n\n    case 'google_font':\n      return styleManager.fonts.google_fonts[fontFamily];\n      break;\n\n    case 'system_font':\n      if (typeof styleManager.fonts.system_fonts[fontFamily] !== 'undefined') {\n        return styleManager.fonts.system_fonts[fontFamily];\n      }\n\n      break;\n\n    case 'third_party_font':\n      if (typeof styleManager.fonts.third_party_fonts[fontFamily] !== 'undefined') {\n        return styleManager.fonts.third_party_fonts[fontFamily];\n      }\n\n      break;\n\n    default:\n  }\n\n  return false;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/get-font-details.js?")},"./src/_js/customizer/fonts/utils/handle-font-popup-toggle.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleFontPopupToggle\": function() { return /* binding */ handleFontPopupToggle; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar handleFontPopupToggle = function handleFontPopupToggle() {\n  var $allFontCheckboxes = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js-font-option-toggle'); // Close all other font fields popups when opening a font field popup.\n\n  $allFontCheckboxes.on('click', function (event) {\n    $allFontCheckboxes.not(event.target).prop('checked', false);\n  }); // Make sure that all fonts popups are closed when backing away from a panel or section.\n  // @todo This doesn't catch backing with ESC key. For that we should hook on Customizer section and panel events ('collapsed').\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('#customize-controls .customize-panel-back, #customize-controls .customize-section-back').on('click', function () {\n    $allFontCheckboxes.prop('checked', false);\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/handle-font-popup-toggle.js?")},"./src/_js/customizer/fonts/utils/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "getCallbackFilter": function() { return /* reexport safe */ _callback_filter__WEBPACK_IMPORTED_MODULE_0__.getCallbackFilter; },\n/* harmony export */   "convertFontVariantToFVD": function() { return /* reexport safe */ _convert_font_variant__WEBPACK_IMPORTED_MODULE_1__.convertFontVariantToFVD; },\n/* harmony export */   "determineFontType": function() { return /* reexport safe */ _determine_font_type__WEBPACK_IMPORTED_MODULE_2__.determineFontType; },\n/* harmony export */   "getFontDetails": function() { return /* reexport safe */ _get_font_details__WEBPACK_IMPORTED_MODULE_3__.getFontDetails; },\n/* harmony export */   "handleFontPopupToggle": function() { return /* reexport safe */ _handle_font_popup_toggle__WEBPACK_IMPORTED_MODULE_4__.handleFontPopupToggle; },\n/* harmony export */   "initSubfield": function() { return /* reexport safe */ _init_subfield__WEBPACK_IMPORTED_MODULE_5__.initSubfield; },\n/* harmony export */   "loadFontValue": function() { return /* reexport safe */ _load_font_value__WEBPACK_IMPORTED_MODULE_6__.loadFontValue; },\n/* harmony export */   "selfUpdateValue": function() { return /* reexport safe */ _self_update_value__WEBPACK_IMPORTED_MODULE_7__.selfUpdateValue; },\n/* harmony export */   "standardizeNumericalValue": function() { return /* reexport safe */ _standardize_numerical_value__WEBPACK_IMPORTED_MODULE_8__.standardizeNumericalValue; },\n/* harmony export */   "updateFontHeadTitle": function() { return /* reexport safe */ _update_font_head_title__WEBPACK_IMPORTED_MODULE_9__.updateFontHeadTitle; },\n/* harmony export */   "updateVariantField": function() { return /* reexport safe */ _update_variant_field__WEBPACK_IMPORTED_MODULE_10__.updateVariantField; },\n/* harmony export */   "fontsService": function() { return /* reexport module object */ _fonts_service__WEBPACK_IMPORTED_MODULE_11__; },\n/* harmony export */   "getSettingID": function() { return /* binding */ getSettingID; },\n/* harmony export */   "getWrapper": function() { return /* binding */ getWrapper; }\n/* harmony export */ });\n/* harmony import */ var _callback_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callback-filter */ "./src/_js/customizer/fonts/utils/callback-filter.js");\n/* harmony import */ var _convert_font_variant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convert-font-variant */ "./src/_js/customizer/fonts/utils/convert-font-variant.js");\n/* harmony import */ var _determine_font_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./determine-font-type */ "./src/_js/customizer/fonts/utils/determine-font-type.js");\n/* harmony import */ var _get_font_details__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./get-font-details */ "./src/_js/customizer/fonts/utils/get-font-details.js");\n/* harmony import */ var _handle_font_popup_toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handle-font-popup-toggle */ "./src/_js/customizer/fonts/utils/handle-font-popup-toggle.js");\n/* harmony import */ var _init_subfield__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./init-subfield */ "./src/_js/customizer/fonts/utils/init-subfield.js");\n/* harmony import */ var _load_font_value__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./load-font-value */ "./src/_js/customizer/fonts/utils/load-font-value.js");\n/* harmony import */ var _self_update_value__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./self-update-value */ "./src/_js/customizer/fonts/utils/self-update-value.js");\n/* harmony import */ var _standardize_numerical_value__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./standardize-numerical-value */ "./src/_js/customizer/fonts/utils/standardize-numerical-value.js");\n/* harmony import */ var _update_font_head_title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./update-font-head-title */ "./src/_js/customizer/fonts/utils/update-font-head-title.js");\n/* harmony import */ var _update_variant_field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./update-variant-field */ "./src/_js/customizer/fonts/utils/update-variant-field.js");\n/* harmony import */ var _fonts_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fonts-service */ "./src/_js/customizer/fonts/utils/fonts-service.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar wrapperSelector = \'.font-options__wrapper\';\nvar valueHolderSelector = \'.style-manager_font_values\';\nvar getSettingID = function getSettingID($element) {\n  return getWrapper($element).find(valueHolderSelector).data(\'customize-setting-link\');\n};\nvar getWrapper = function getWrapper($element) {\n  return $element.closest(wrapperSelector);\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/index.js?')},"./src/_js/customizer/fonts/utils/init-subfield.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initSubfield\": function() { return /* binding */ initSubfield; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/self-update-value.js\");\n\n\nvar initSubfield = function initSubfield($subField) {\n  var select2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // Mark these as not touched by the user.\n  $subField.data('touched', false);\n  $subField.on('input change', onSubfieldChange); // If we've been instructed, initialize a select2.\n\n  if (true === select2) {\n    $subField.select2();\n  }\n};\n\nvar onSubfieldChange = function onSubfieldChange(event, who) {\n  var $subField = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target); // The change was triggered programmatically by Style Manager.\n  // No need to self-update the value.\n\n  if ('style-manager' === who) {\n    return;\n  }\n\n  var wrapper = (0,_index__WEBPACK_IMPORTED_MODULE_1__.getWrapper)($subField);\n  var settingID = (0,_index__WEBPACK_IMPORTED_MODULE_1__.getSettingID)($subField); // Mark this input as touched by the user.\n\n  $subField.data('touched', true); // Gather subfield values and trigger refresh of the fonts in the preview window.\n\n  (0,_index__WEBPACK_IMPORTED_MODULE_2__.selfUpdateValue)(wrapper, settingID);\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/init-subfield.js?")},"./src/_js/customizer/fonts/utils/load-font-value.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loadFontValue\": function() { return /* binding */ loadFontValue; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/fonts-service.js\");\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./round */ \"./src/_js/customizer/fonts/utils/round.js\");\n/* harmony import */ var _standardize_numerical_value__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./standardize-numerical-value */ \"./src/_js/customizer/fonts/utils/standardize-numerical-value.js\");\n\n\n\n\n/**\n * This function is a reverse of selfUpdateValue(), initializing the entire font field controls\n * based on the setting value.\n */\n\nvar loadFontValue = function loadFontValue(wrapper, value, settingID) {\n  // If we are already loading this setting value and haven't finished, there is no point in starting again.\n  if (_index__WEBPACK_IMPORTED_MODULE_1__.isLoading(settingID)) {\n    return;\n  } // Mark the fact that we are loading the field value\n\n\n  _index__WEBPACK_IMPORTED_MODULE_1__.setLoading(settingID, true);\n  var optionsList = jquery__WEBPACK_IMPORTED_MODULE_0___default()(wrapper).find('.font-options__options-list'),\n      inputs = optionsList.find('[data-value_entry]');\n  inputs.each(function (key, input) {\n    var $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n    var valueEntry = $input.data('value_entry'); // In the case of select2, only the original selects have the data field, thus excluding select2 created select DOM elements\n\n    if (typeof valueEntry === 'undefined' || valueEntry === '' || typeof value[valueEntry] === 'undefined') {\n      return;\n    } // We will do this only for numerical sub-fields.\n\n\n    if (_.includes(['letter_spacing', 'line_height', 'font_size'], valueEntry)) {\n      var subfieldValue = (0,_standardize_numerical_value__WEBPACK_IMPORTED_MODULE_2__.standardizeNumericalValue)(value[valueEntry], input); // Make sure that the unit and value_unit attributes are in place.\n\n      if (subfieldValue.unit !== '') {\n        $input.data('value_unit', subfieldValue.unit);\n\n        if (_.isEmpty($input.attr('unit'))) {\n          $input.attr('unit', subfieldValue.unit);\n        }\n      } // If the field unit and value unit differ, we have some conversion to do.\n      // We will convert the received value to the appropriate unit declared by the input.\n      // We will use a guessed base size of 16px. Not an exact conversion, but it will have to do.\n\n\n      var baseSize = 16;\n      var subfieldUnit = $input.attr('unit').trim().toLowerCase();\n      var subfieldValueUnit = $input.data('value_unit').trim().toLowerCase(); // The comparison is intentionally loose.\n\n      if (subfieldUnit != subfieldValueUnit) {\n        if (_.includes(['em', 'rem'], subfieldValueUnit) && 'px' === subfieldUnit) {\n          // We will have to multiply the value.\n          subfieldValue.value = (0,_round__WEBPACK_IMPORTED_MODULE_3__.round)(subfieldValue.value * baseSize, styleManager.fonts.floatPrecision);\n        } else if (_.includes(['em', 'rem'], subfieldUnit) && 'px' === subfieldValueUnit) {\n          // We will have to divide the value.\n          subfieldValue.value = (0,_round__WEBPACK_IMPORTED_MODULE_3__.round)(subfieldValue.value / baseSize, styleManager.fonts.floatPrecision);\n        }\n      } // If this field has a min/max attribute we need to make sure that those attributes allow for the value we are trying to impose.\n\n\n      if ($input.attr('min') && $input.attr('min') > subfieldValue.value) {\n        $input.attr('min', subfieldValue.value);\n      }\n\n      if ($input.attr('max') && $input.attr('max') < subfieldValue.value) {\n        $input.attr('max', subfieldValue.value);\n      }\n\n      $input.val(subfieldValue.value);\n    } else {\n      $input.val(value[valueEntry]);\n    } // Mark this input as not touched by the user.\n\n\n    $input.data('touched', false);\n    $input.trigger('change', ['style-manager']);\n  }); // Finished with the field value loading.\n\n  _index__WEBPACK_IMPORTED_MODULE_1__.setLoading(settingID, false);\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/load-font-value.js?")},"./src/_js/customizer/fonts/utils/round.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "round": function() { return /* binding */ round; }\n/* harmony export */ });\nvar round = function round(number, precision) {\n  var factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/round.js?')},"./src/_js/customizer/fonts/utils/self-update-value.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"selfUpdateValue\": function() { return /* binding */ selfUpdateValue; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/fonts-service.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/standardize-numerical-value.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index */ \"./src/_js/customizer/fonts/utils/get-font-details.js\");\n\n\n/**\n * Gather the value for our entire font field and save it in the setting.\n */\n\nvar selfUpdateValue = function selfUpdateValue(wrapper, settingID) {\n  // If we are already self-updating this and we haven't finished, we need to stop here to prevent infinite loops\n  // This call might have come from a subfield detecting the change thus triggering a further selfUpdateValue()\n  // If we are loading this setting value and haven't finished,\n  // there is no point in updating it as this would cause infinite loops.\n  if (_index__WEBPACK_IMPORTED_MODULE_1__.isUpdating(settingID) || _index__WEBPACK_IMPORTED_MODULE_1__.isLoading(settingID)) {\n    return;\n  } // Mark the fact that we are self-updating the field value\n\n\n  _index__WEBPACK_IMPORTED_MODULE_1__.setUpdating(settingID, true);\n  var optionsList = wrapper.find('.font-options__options-list');\n  var inputs = optionsList.find('[data-value_entry]');\n  var newFontData = {};\n  wp.customize(settingID, function (setting) {\n    newFontData = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend(true, {}, setting());\n    inputs.each(function (key, input) {\n      var $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n      var valueEntry = $input.data('value_entry');\n      var value = $input.val(); // We only pick up subfields values that have been touched by the user, that are enabled (visible) or values that are missing in the oldValue.\n\n      if (_.isUndefined(valueEntry) || $input.data('disabled') || !$input.data('touched') && !_.isUndefined(newFontData[valueEntry])) {\n        return;\n      }\n\n      if ('font_family' === valueEntry) {\n        // Get the src of the selected option.\n        var src = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input.options[input.selectedIndex]).data('src');\n\n        if (src) {\n          newFontData['src'] = src;\n        } else {\n          delete newFontData['src'];\n        }\n      }\n\n      if (!_.isUndefined(value) && !_.isNull(value) && value !== '') {\n        if (_.includes(['letter_spacing', 'line_height', 'font_size'], valueEntry)) {\n          // Standardize the value.\n          value = (0,_index__WEBPACK_IMPORTED_MODULE_2__.standardizeNumericalValue)(value, input, false);\n        }\n\n        newFontData[valueEntry] = value;\n      } else {\n        delete newFontData[valueEntry];\n      }\n    }); // We don't need to store font variants or subsets list in the value\n    // since we will get those from the global font details.\n\n    delete newFontData['variants'];\n    delete newFontData['subsets']; // We need to make sure that we don't \"use\" any variants not supported by the new font (values passed over from the old value).\n    // Get the new font details\n\n    var newFontDetails = (0,_index__WEBPACK_IMPORTED_MODULE_3__.getFontDetails)(newFontData['font_family']); // Check the font variant\n\n    if (typeof newFontData['font_variant'] !== 'undefined' && typeof newFontDetails.variants !== 'undefined' && Object.keys(newFontDetails.variants).length > 0) {\n      // Make sure that the font_variant is a string, not a number.\n      newFontData['font_variant'] = String(newFontData['font_variant']);\n\n      if (!_.includes(newFontDetails.variants, newFontData['font_variant'])) {\n        // The new font doesn't have this variant. Nor should the value.\n        delete newFontData['font_variant'];\n      }\n    } else {\n      // The new font has no variants. Nor should the value.\n      delete newFontData['font_variant'];\n    } // Update the Customizer setting value.\n\n\n    setting.set(newFontData);\n  }); // Finished with the field value self-updating.\n\n  _index__WEBPACK_IMPORTED_MODULE_1__.setUpdating(settingID, false);\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/self-update-value.js?")},"./src/_js/customizer/fonts/utils/standardize-numerical-value.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"standardizeNumericalValue\": function() { return /* binding */ standardizeNumericalValue; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Given a value we will standardize it to an array with 'value' and 'unit'.\n *\n * This is a mirror logic of the server-side one from Utils\\Fonts::standardizeNumericalValue()\n *\n * @param value\n * @param input Optional. The input this value was extracted from\n * @param valueFirst Optional. Whether to give higher priority to value related data, or to input related one.\n */\n\nvar standardizeNumericalValue = function standardizeNumericalValue(value) {\n  var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var valueFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var standardValue = {\n    value: false,\n    unit: false\n  };\n\n  if (_.includes(['', 'false', false], value)) {\n    return standardValue;\n  }\n\n  if (!isNaN(value)) {\n    standardValue.value = value;\n  } else if (typeof value.value !== 'undefined') {\n    standardValue.value = value.value;\n\n    if (typeof value.unit !== 'undefined') {\n      standardValue.unit = value.unit;\n    }\n  } else if (typeof value[0] !== 'undefined') {\n    standardValue.value = value[0];\n\n    if (typeof value[1] !== 'undefined') {\n      standardValue.unit = value[1];\n    }\n  } else if (typeof value === 'string') {\n    // We will get everything in front that is a valid part of a number (float including).\n    var matches = value.match(/^([\\d.\\-+]+)(.+)/i);\n\n    if (matches !== null && typeof matches[1] !== 'undefined') {\n      standardValue.value = matches[1];\n\n      if (!_.isEmpty(matches[2])) {\n        standardValue.unit = matches[2];\n      }\n    } else {\n      // If we could not extract anything useful we will trust the developer and leave it like that.\n      standardValue.value = value;\n    }\n  }\n\n  if (false !== input && (false === standardValue.unit || _.isEmpty(standardValue.unit))) {\n    // If we are given an input, we will attempt to extract the unit from its attributes.\n    var fallbackInputUnit = '';\n    var $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n\n    if (valueFirst) {\n      if (!_.isEmpty($input.data('value_unit'))) {\n        fallbackInputUnit = $input.data('value_unit');\n      } else if (!_.isEmpty($input.attr('unit'))) {\n        fallbackInputUnit = $input.attr('unit');\n      }\n    } else {\n      if (!_.isEmpty($input.attr('unit'))) {\n        fallbackInputUnit = $input.attr('unit');\n      } else if (!_.isEmpty($input.data('value_unit'))) {\n        fallbackInputUnit = $input.data('value_unit');\n      }\n    }\n\n    standardValue.unit = fallbackInputUnit;\n  } // Make sure that if we have a numerical value, it is a float.\n\n\n  if (!isNaN(standardValue.value)) {\n    standardValue.value = parseFloat(standardValue.value);\n  }\n\n  return standardValue;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/standardize-numerical-value.js?")},"./src/_js/customizer/fonts/utils/update-font-head-title.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateFontHeadTitle\": function() { return /* binding */ updateFontHeadTitle; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Update the title of the font field (the field head) with the new font family name.\n *\n * @param newFontDetails\n * @param wrapper\n */\n\nvar updateFontHeadTitle = function updateFontHeadTitle(newFontDetails, wrapper) {\n  var fontTitleElement = wrapper.find('.font-options__head .font-options__font-title');\n  var fontFamilyDisplay = newFontDetails.family;\n\n  if (typeof newFontDetails.family_display === 'string' && newFontDetails.family_display.length) {\n    fontFamilyDisplay = newFontDetails.family_display;\n  }\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(fontTitleElement).html(fontFamilyDisplay);\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/update-font-head-title.js?")},"./src/_js/customizer/fonts/utils/update-variant-field.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateVariantField\": function() { return /* binding */ updateVariantField; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar fontVariantSelector = '.style-manager_font_weight';\n/**\n * This function updates the data in font weight selector from the given <option> element\n *\n * @param newFontDetails\n * @param wrapper\n */\n\nvar updateVariantField = function updateVariantField(newFontDetails, wrapper) {\n  var variants = typeof newFontDetails.variants !== 'undefined' ? newFontDetails.variants : [],\n      fontVariantInput = wrapper.find(fontVariantSelector),\n      selectedVariant = fontVariantInput.val() ? fontVariantInput.val() : '',\n      newVariants = []; // We clear everything about this subfield.\n\n  fontVariantInput.val(null).empty();\n\n  if (fontVariantInput.hasClass(\"select2-hidden-accessible\")) {\n    fontVariantInput.select2('destroy');\n  } // Mark this input as not touched by the user.\n\n\n  fontVariantInput.data('touched', false);\n\n  if (typeof variants === 'undefined' || Object.keys(variants).length < 2) {\n    fontVariantInput.parent().hide();\n    fontVariantInput.parent().prev('label').hide(); // Mark this input as disabled.\n\n    fontVariantInput.data('disabled', true);\n    return;\n  }\n\n  var variantAutoText = styleManager.l10n.fonts.variantAutoText; // Initialize the options with an empty one.\n\n  newVariants.push({\n    'id': '',\n    'text': variantAutoText\n  }); // we need to turn the data array into a specific form like [{id:\"id\", text:\"Text\"}]\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().each(variants, function (index, variant) {\n    var newVariant = {\n      'id': variant,\n      // This is the option value.\n      'text': variant\n    }; // Leave the comparison loose.\n\n    if (selectedVariant == variant) {\n      newVariant.selected = true;\n    }\n\n    newVariants.push(newVariant);\n  }); // This is a costly operation especially when font palettes are changed and multiple font fields are updated\n\n  requestIdleCallback(function () {\n    // Only reinitialize the select2.\n    // No need to rebind on change or on input since those are still bound to the original HTML element.\n    fontVariantInput.select2({\n      data: newVariants\n    });\n    fontVariantInput.parent().show();\n    fontVariantInput.parent().prev('label').show(); // Mark this input as enabled.\n\n    fontVariantInput.data('disabled', false);\n  });\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/fonts/utils/update-variant-field.js?")},"./src/_js/customizer/global-service.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "loadSettings": function() { return /* binding */ loadSettings; },\n/* harmony export */   "getSettings": function() { return /* binding */ getSettings; },\n/* harmony export */   "setSettings": function() { return /* binding */ setSettings; },\n/* harmony export */   "getSetting": function() { return /* binding */ getSetting; },\n/* harmony export */   "getSettingConfig": function() { return /* binding */ getSettingConfig; },\n/* harmony export */   "setSetting": function() { return /* binding */ setSetting; },\n/* harmony export */   "getCallback": function() { return /* binding */ getCallback; },\n/* harmony export */   "setCallback": function() { return /* binding */ setCallback; },\n/* harmony export */   "getCallbacks": function() { return /* binding */ getCallbacks; },\n/* harmony export */   "deleteCallbacks": function() { return /* binding */ deleteCallbacks; },\n/* harmony export */   "getBackArray": function() { return /* binding */ getBackArray; },\n/* harmony export */   "addToBackArray": function() { return /* binding */ addToBackArray; },\n/* harmony export */   "setBackArray": function() { return /* binding */ setBackArray; },\n/* harmony export */   "pushToBackArray": function() { return /* binding */ pushToBackArray; },\n/* harmony export */   "popFromBackArray": function() { return /* binding */ popFromBackArray; },\n/* harmony export */   "bindConnectedFields": function() { return /* binding */ bindConnectedFields; },\n/* harmony export */   "unbindConnectedFields": function() { return /* binding */ unbindConnectedFields; }\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n\nvar callbacks = {};\nvar settings = {};\nvar overrideCustomizerBack = [];\nvar loadSettings = function loadSettings() {\n  settings = JSON.parse(JSON.stringify(wp.customize.settings.settings));\n};\nvar getSettings = function getSettings() {\n  return settings;\n};\nvar setSettings = function setSettings(newSettings) {\n  settings = newSettings;\n};\nvar getSetting = function getSetting(settingID) {\n  return settings[settingID];\n};\nvar getSettingConfig = function getSettingConfig(settingID) {\n  return styleManager.config.settings[settingID];\n};\nvar setSetting = function setSetting(settingID, value) {\n  settings[settingID] = value;\n};\nvar getCallback = function getCallback(settingID) {\n  return callbacks[settingID];\n};\nvar setCallback = function setCallback(settingID, callback) {\n  callbacks[settingID] = callback;\n};\nvar getCallbacks = function getCallbacks() {\n  return callbacks;\n};\nvar deleteCallbacks = function deleteCallbacks(settingIDs) {\n  settingIDs.forEach(function (settingID) {\n    delete callbacks[settingID];\n  });\n};\nvar getBackArray = function getBackArray() {\n  return overrideCustomizerBack;\n};\nvar addToBackArray = function addToBackArray(section) {\n  overrideCustomizerBack.push(section);\n};\nvar setBackArray = function setBackArray(newArray) {\n  overrideCustomizerBack = newArray.slice();\n};\nvar pushToBackArray = function pushToBackArray(targetSection, section) {\n  var backArray = getBackArray();\n  window.document.body.classList.add(\'remove-customizer-transitions\');\n  setBackArray([]);\n  targetSection.focus();\n  setBackArray(backArray);\n  addToBackArray(section);\n};\nvar popFromBackArray = function popFromBackArray() {\n  var backArray = getBackArray();\n  var targetSectionID = backArray.pop();\n\n  if (targetSectionID) {\n    wp.customize.section(targetSectionID, function (targetSection) {\n      targetSection.focus();\n\n      if (!backArray.length) {\n        setTimeout(function () {\n          window.document.body.classList.remove(\'remove-customizer-transitions\');\n        }, 100);\n      }\n    });\n  }\n};\nvar bindConnectedFields = function bindConnectedFields(settingIDs) {\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  settingIDs.forEach(function (settingID) {\n    wp.customize(settingID, function (parentSetting) {\n      setCallback(settingID, function (newValue) {\n        var settingConfig = getSetting(settingID);\n        var connectedFields = settingConfig.connected_fields || {};\n        Object.keys(connectedFields).map(function (key) {\n          return connectedFields[key].setting_id;\n        }).forEach(function (connectedSettingID) {\n          wp.customize(connectedSettingID, function (connectedSetting) {\n            connectedSetting.set(filter(newValue));\n          });\n        });\n      });\n      parentSetting.bind(getCallback(settingID));\n    });\n  });\n};\nvar unbindConnectedFields = function unbindConnectedFields(settingIDs) {\n  var globalCallbacks = lodash__WEBPACK_IMPORTED_MODULE_0___default().pick(getCallbacks(), settingIDs);\n\n  lodash__WEBPACK_IMPORTED_MODULE_0___default().each(globalCallbacks, function (callback, settingID) {\n    wp.customize(settingID, function (setting) {\n      setting.unbind(callback);\n    });\n  });\n\n  deleteCallbacks(settingIDs);\n};\n\nvar noop = function noop(x) {\n  return x;\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/global-service.js?')},"./src/_js/customizer/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "getFontDetails": function() { return /* reexport safe */ _fonts_utils__WEBPACK_IMPORTED_MODULE_13__.getFontDetails; },\n/* harmony export */   "determineFontType": function() { return /* reexport safe */ _fonts_utils__WEBPACK_IMPORTED_MODULE_14__.determineFontType; },\n/* harmony export */   "convertFontVariantToFVD": function() { return /* reexport safe */ _fonts_utils__WEBPACK_IMPORTED_MODULE_15__.convertFontVariantToFVD; },\n/* harmony export */   "maybeFillPalettesArray": function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_16__.maybeFillPalettesArray; },\n/* harmony export */   "getCSSFromPalettes": function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_17__.getCSSFromPalettes; },\n/* harmony export */   "resizer": function() { return /* reexport module object */ _resizer__WEBPACK_IMPORTED_MODULE_18__; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "jquery");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style.scss */ "./src/_js/customizer/style.scss");\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./colors */ "./src/_js/customizer/colors/index.js");\n/* harmony import */ var _fonts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./fonts */ "./src/_js/customizer/fonts/index.js");\n/* harmony import */ var _font_palettes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./font-palettes */ "./src/_js/customizer/font-palettes/index.js");\n/* harmony import */ var _global_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./global-service */ "./src/_js/customizer/global-service.js");\n/* harmony import */ var _resizer__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resizer */ "./src/_js/customizer/resizer/index.js");\n/* harmony import */ var _fields_color_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fields/color-select */ "./src/_js/customizer/fields/color-select/index.js");\n/* harmony import */ var _fields_range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fields/range */ "./src/_js/customizer/fields/range/index.js");\n/* harmony import */ var _fields_tabs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fields/tabs */ "./src/_js/customizer/fields/tabs/index.js");\nObject(function webpackMissingModule() { var e = new Error("Cannot find module \'./fields/preset\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }());\n/* harmony import */ var _folding_fields__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./folding-fields */ "./src/_js/customizer/folding-fields.js");\n/* harmony import */ var _create_reset_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./create-reset-buttons */ "./src/_js/customizer/create-reset-buttons.js");\n/* harmony import */ var _feedback_modal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./feedback-modal */ "./src/_js/customizer/feedback-modal.js");\n/* harmony import */ var _fonts_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fonts/utils */ "./src/_js/customizer/fonts/utils/get-font-details.js");\n/* harmony import */ var _fonts_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fonts/utils */ "./src/_js/customizer/fonts/utils/determine-font-type.js");\n/* harmony import */ var _fonts_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./fonts/utils */ "./src/_js/customizer/fonts/utils/convert-font-variant.js");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils */ "./src/_js/customizer/utils/maybe-fill-palettes-array.js");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils */ "./src/_js/customizer/utils/get-css-from-palettes.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwp.customize.bind(\'ready\', function () {\n  _global_service__WEBPACK_IMPORTED_MODULE_3__.loadSettings();\n  var settings = _global_service__WEBPACK_IMPORTED_MODULE_3__.getSettings();\n  var settingIDs = Object.keys(settings);\n  _global_service__WEBPACK_IMPORTED_MODULE_3__.bindConnectedFields(settingIDs);\n  (0,_create_reset_buttons__WEBPACK_IMPORTED_MODULE_4__.createResetButtons)();\n  (0,_fields_range__WEBPACK_IMPORTED_MODULE_5__.handleRangeFields)();\n  (0,_fields_color_select__WEBPACK_IMPORTED_MODULE_6__.handleColorSelectFields)();\n  (0,_fields_tabs__WEBPACK_IMPORTED_MODULE_7__.handleTabs)();\n  Object(function webpackMissingModule() { var e = new Error("Cannot find module \'./fields/preset\'"); e.code = \'MODULE_NOT_FOUND\'; throw e; }())(); // @todo check reason for this timeout\n\n  setTimeout(function () {\n    (0,_folding_fields__WEBPACK_IMPORTED_MODULE_8__.handleFoldingFields)();\n  }, 1000); // Initialize simple select2 fields.\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(\'.style-manager_select2\').select2();\n  (0,_colors__WEBPACK_IMPORTED_MODULE_9__.initializeColors)();\n  (0,_fonts__WEBPACK_IMPORTED_MODULE_10__.initializeFonts)();\n  (0,_font_palettes__WEBPACK_IMPORTED_MODULE_11__.initializeFontPalettes)();\n  (0,_feedback_modal__WEBPACK_IMPORTED_MODULE_12__.initializeFeedbackModal)();\n}); // expose API on sm.customizer global object\n\n\n\n\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/index.js?')},"./src/_js/customizer/resizer/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setOffset\": function() { return /* binding */ setOffset; },\n/* harmony export */   \"resize\": function() { return /* binding */ resize; }\n/* harmony export */ });\nvar defaultOffset = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nvar offset = defaultOffset;\nwp.customize.bind('ready', function () {\n  setOffset({\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  });\n  resize();\n  window.addEventListener('resize', resize);\n  wp.customize.previewedDevice.bind(resize);\n  wp.customize.previewer.bind('synced', function () {\n    window.requestAnimationFrame(resize);\n  });\n  var collapseSidebar = document.querySelector('.collapse-sidebar');\n\n  if (!collapseSidebar) {\n    return;\n  }\n\n  collapseSidebar.addEventListener('click', function () {\n    setTimeout(resize, 300);\n  });\n});\nvar setOffset = function setOffset(newOffset) {\n  offset = Object.assign({}, newOffset);\n};\nvar resize = function resize() {\n  var preview = document.querySelector('.wp-full-overlay');\n\n  if (!preview) {\n    return;\n  }\n\n  var iframe = preview.querySelector('iframe');\n  var previewedDevice = wp.customize.previewedDevice.get();\n\n  if (!iframe) {\n    return;\n  } // remove CSS properties that may have been previously added\n\n\n  iframe.style.removeProperty('width');\n  iframe.style.removeProperty('height');\n  iframe.style.removeProperty('transform-origin');\n  iframe.style.removeProperty('transform');\n  iframe.style.removeProperty('margin-top');\n  iframe.style.removeProperty('margin-left'); // scaling of the site preview should be done only in desktop preview mode\n\n  if (previewedDevice !== 'desktop') {\n    return;\n  }\n\n  var windowWidth = window.innerWidth;\n  var windowHeight = window.innerHeight;\n  var previewWidth = preview.offsetWidth;\n  var previewHeight = preview.offsetHeight; // for an accurate preview at resolutions where media queries may intervene\n  // increase the width of the preview and use CSS transforms to scale it back down\n\n  var shouldScale = previewWidth > 720 && previewWidth < 1100;\n  var initialHeight = previewHeight;\n  var finalHeight = previewHeight - offset.top - offset.bottom;\n  var initialWidth = shouldScale ? windowWidth : previewWidth;\n  var finalWidth = previewWidth - offset.left - offset.right;\n  var scaleX = initialWidth / finalWidth;\n  var scaleY = initialHeight / finalHeight;\n  var scale = Math.max(scaleX, scaleY);\n  iframe.style.width = \"\".concat(finalWidth * scale, \"px\");\n  iframe.style.height = \"\".concat(finalHeight * scale, \"px\");\n  iframe.style.transformOrigin = \"left top\";\n  iframe.style.transform = \"scale( \".concat(1 / scale, \" )\");\n  iframe.style.marginTop = \"\".concat(offset.top, \"px\");\n  iframe.style.marginLeft = \"\".concat(offset.left, \"px\");\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/resizer/index.js?")},"./src/_js/customizer/utils/api-set-setting-value.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"apiSetSettingValue\": function() { return /* binding */ apiSetSettingValue; }\n/* harmony export */ });\n/**\n * Set a setting value.\n *\n * Mostly used for resetting settings (via the reset buttons) but also for the preset (legacy) field.\n *\n * @param settingID\n * @param value\n */\nvar apiSetSettingValue = function apiSetSettingValue(settingID, value) {\n  var setting = api(settingID),\n      field = $('[data-customize-setting-link=\"' + settingID + '\"]'),\n      fieldClass = $(field).parent().attr('class');\n\n  if (!_.isUndefined(fieldClass) && fieldClass === 'font-options__wrapper') {\n    // if the value is a simple string it must be the font family\n    if (_.isString(value)) {\n      setting.set({\n        'font_family': value\n      });\n    } else if (_.isObject(value)) {\n      var standardValue = {}; // We will process each font property and update it\n\n      _.each(value, function (val, key) {\n        // We need to map the keys to the data attributes we are using - I know :(\n        var mappedKey = key;\n\n        switch (key) {\n          case 'font-family':\n            mappedKey = 'font_family';\n            break;\n\n          case 'font-size':\n            mappedKey = 'font_size';\n            break;\n\n          case 'font-weight':\n            mappedKey = 'font_variant';\n            break;\n\n          case 'letter-spacing':\n            mappedKey = 'letter_spacing';\n            break;\n\n          case 'text-transform':\n            mappedKey = 'text_transform';\n            break;\n\n          default:\n            break;\n        }\n\n        standardValue[mappedKey] = val;\n      });\n\n      setting.set(standardValue);\n    }\n  } else {\n    setting.set(value);\n  }\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/utils/api-set-setting-value.js?")},"./src/_js/customizer/utils/get-css-from-palettes.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "getCSSFromPalettes": function() { return /* binding */ getCSSFromPalettes; }\n/* harmony export */ });\nvar getCSSFromPalettes = function getCSSFromPalettes(palettesArray) {\n  var variation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var palettes = palettesArray.slice();\n\n  if (!palettes.length) {\n    return \'\';\n  } // the old implementation generates 3 fallback palettes and\n  // we need to overwrite all 3 of them when the user starts building a new palette\n  // @todo this is necessary only in the Customizer preview\n\n\n  while (palettes.length < 3) {\n    palettes.push(palettes[0]);\n  }\n\n  return palettes.reduce(function (palettesAcc, palette, paletteIndex, palettes) {\n    var id = palette.id;\n    var paletteSelector = ".sm-palette-".concat(id);\n    var darkPaletteSelector = ".is-dark .sm-palette-".concat(id);\n    var paletteShiftedSelector = ".sm-palette-".concat(id, ".sm-palette--shifted");\n\n    if (id.toString() === \'1\') {\n      paletteSelector = "html, ".concat(paletteSelector);\n      darkPaletteSelector = "html.is-dark, ".concat(darkPaletteSelector);\n    }\n\n    return "\\n      ".concat(palettesAcc, "\\n      ").concat(paletteSelector, " {\\n      ").concat(getVariationsCSS(palette.variations, variation - 1), "\\n      }\\n      ").concat(darkPaletteSelector, " {\\n      ").concat(getVariationsCSS(palette.darkVariations, variation - 1), "\\n      }\\n      ").concat(paletteShiftedSelector, " {\\n      ").concat(getVariationsCSS(palette.variations, palette.sourceIndex), "\\n      }\\n    ");\n  }, \'\');\n};\n\nvar getVariationsCSS = function getVariationsCSS(variations, offset) {\n  return "\\n        ".concat(variations.reduce(function (variationsAcc, value, index) {\n    return "\\n            ".concat(variationsAcc, "\\n            ").concat(getVariationCSS(variations, index, offset), "  \\n        ");\n  }, \'\'), "\\n        ");\n};\n\nvar getVariationCSS = function getVariationCSS(variations, index, offset) {\n  var variation = variations[(index + offset) % 12];\n  return Object.keys(variation).reduce(function (acc, key) {\n    return "".concat(acc, "\\n    --sm-").concat(key, "-color-").concat(index + 1, ": ").concat(variation[key], ";");\n  }, \'\');\n};\n\n/* harmony default export */ __webpack_exports__["default"] = (getCSSFromPalettes);\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/utils/get-css-from-palettes.js?')},"./src/_js/customizer/utils/maybe-fill-palettes-array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maybeFillPalettesArray\": function() { return /* binding */ maybeFillPalettesArray; }\n/* harmony export */ });\nvar maybeFillPalettesArray = function maybeFillPalettesArray(arr, minLength) {\n  if (Array.isArray(arr) && !!arr.length) {\n    var userPalettes = arr.filter(function (palette) {\n      var id = palette.id.toString();\n      return id.indexOf('_') !== 0;\n    });\n    var userPalettesCount = userPalettes.length;\n\n    if (userPalettesCount < minLength) {\n      for (var i = 0; i < minLength - userPalettesCount; i++) {\n        var newPalette = JSON.parse(JSON.stringify(arr[0]));\n        newPalette.id = userPalettesCount + i + 1;\n        arr.splice(userPalettesCount + i, 0, newPalette);\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/utils/maybe-fill-palettes-array.js?")},"./src/_js/utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "debounce": function() { return /* binding */ debounce; }\n/* harmony export */ });\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/utils.js?')},"./src/_js/customizer/style.scss":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/style.scss?")},"./node_modules/svg-baker-runtime/browser-symbol.js":function(module,__unused_webpack_exports,__webpack_require__){eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\t0;\n}(this, (function () { 'use strict';\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (false) {} else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nreturn BrowserSpriteSymbol;\n\n})));\n\n\n//# sourceURL=webpack://sm.%5Bname%5D/./node_modules/svg-baker-runtime/browser-symbol.js?")},"./src/_js/customizer/svg/colorize-elements.svg":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/svg-baker-runtime/browser-symbol.js */ "./node_modules/svg-baker-runtime/browser-symbol.js");\n/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js */ "./node_modules/svg-sprite-loader/runtime/browser-sprite.build.js");\n/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar symbol = new (_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default())({\n  "id": "colorize-elements",\n  "use": "colorize-elements-usage",\n  "viewBox": "0 0 24 24",\n  "content": "<symbol viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\" id=\\"colorize-elements\\">\\n<path d=\\"M16.66 4.51945L19.49 7.34945L16.66 10.1795L13.83 7.34945L16.66 4.51945ZM9 4.99945V8.99945H5V4.99945H9ZM19 14.9995V18.9995H15V14.9995H19ZM9 14.9995V18.9995H5V14.9995H9ZM16.66 1.68945L11 7.33945L16.66 12.9995L22.32 7.33945L16.66 1.68945ZM11 2.99945H3V10.9995H11V2.99945ZM21 12.9995H13V20.9995H21V12.9995ZM11 12.9995H3V20.9995H11V12.9995Z\\" fill=\\"#2F384C\\" />\\n</symbol>"\n});\nvar result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default().add(symbol);\n/* harmony default export */ __webpack_exports__["default"] = (symbol);\n\n//# sourceURL=webpack://sm.%5Bname%5D/./src/_js/customizer/svg/colorize-elements.svg?')},"./node_modules/svg-sprite-loader/runtime/browser-sprite.build.js":function(module,__unused_webpack_exports,__webpack_require__){eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\t0;\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (false) {} else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),\n    'aria-hidden': 'true'\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar browser = {\n  isChrome: function () { return /chrome/i.test(navigator.userAgent); },\n  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },\n  isEdge: function () { return /edge/i.test(navigator.userAgent); }\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern, mask, clipPath';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE() || browser.isEdge()) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nvar ready$1 = createCommonjsModule(function (module) {\n/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  { module.exports = definition(); }\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n\n  if (!loaded)\n  { doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener);\n    loaded = 1;\n    while (listener = fns.shift()) { listener(); }\n  }); }\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  }\n\n});\n});\n\nvar spriteNodeId = '__SVG_SPRITE_NODE__';\nvar spriteGlobalVarName = '__SVG_SPRITE__';\nvar isSpriteExists = !!window[spriteGlobalVarName];\n\n// eslint-disable-next-line import/no-mutable-exports\nvar sprite;\n\nif (isSpriteExists) {\n  sprite = window[spriteGlobalVarName];\n} else {\n  sprite = new BrowserSprite({\n    attrs: {\n      id: spriteNodeId,\n      'aria-hidden': 'true'\n    }\n  });\n  window[spriteGlobalVarName] = sprite;\n}\n\nvar loadSprite = function () {\n  /**\n   * Check for page already contains sprite node\n   * If found - attach to and reuse it's content\n   * If not - render and mount the new sprite\n   */\n  var existing = document.getElementById(spriteNodeId);\n\n  if (existing) {\n    sprite.attach(existing);\n  } else {\n    sprite.mount(document.body, true);\n  }\n};\n\nif (document.body) {\n  loadSprite();\n} else {\n  ready$1(loadSprite);\n}\n\nvar sprite$1 = sprite;\n\nreturn sprite$1;\n\n})));\n\n\n//# sourceURL=webpack://sm.%5Bname%5D/./node_modules/svg-sprite-loader/runtime/browser-sprite.build.js?")},react:function(e){"use strict";e.exports=window.React},"react-dom":function(e){"use strict";e.exports=window.ReactDOM},jquery:function(e){"use strict";e.exports=window.jQuery},lodash:function(e){"use strict";e.exports=window.lodash}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=function(e,n){for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/_js/customizer/index.js");(window.sm=window.sm||{}).customizer=__webpack_exports__})();